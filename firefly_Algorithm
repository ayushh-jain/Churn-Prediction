function [best]=firefly_Algorithm(instr)

if nargin<1,   instr=[12 50];     
end
n=instr(1);  MxGnrn=instr(2);

rand('state',0);  

str1='exp(-(x-4)^2-(y-4)^2)+exp(-(x+4)^2-(y-4)^2)';
str2='+2*exp(-x^2-(y+4)^2)+2*exp(-x^2-y^2)';
funstr=strcat(str1,str2);

f=vectorize(inline(funstr));

range=[-5 5 -5 5];


Ngrid=100;
dx=(range(2)-range(1))/Ngrid;
dy=(range(4)-range(3))/Ngrid;
[x,y]=meshgrid(range(1):dx:range(2),...
               range(3):dy:range(4));
z=f(x,y);
% Display the shape of the objective function
figure(1);    surfc(x,y,z);


[xn,yn,Lightn]=init_ffa(n,range);

 figure(2);

for i=1:MxGnrn,     %%%%% start iterations

	 contour(x,y,z,15); hold on;
	
	zn=f(xn,yn);

	
	[Lightn,Index]=sort(zn);
	xn=xn(Index); yn=yn(Index);
	xo=xn;   yo=yn;    Lighto=Lightn;
	
	plot(xn,yn,'.','markersize',10,'markerfacecolor','g');
	
	[xn,yn]=ffa_move(xn,yn,Lightn,xo,yo,Lighto,alpha,gamma,range);
	drawnow;
	
		hold off;
		
	
	alpha=newalpha(alpha,delta);
		
end  
best(:,1)=xo'; best(:,2)=yo'; best(:,3)=Lighto';

function [xn,yn,Lightn]=init_ffa(n,range)
xrange=range(2)-range(1);
yrange=range(4)-range(3);
xn=rand(1,n)*xrange+range(1);
yn=rand(1,n)*yrange+range(3);
Lightn=zeros(size(yn));
function [xn,yn]=ffa_move(xn,yn,Lightn,xo,yo,...
Lighto,alpha,gamma,range)
ni=size(yn,2); nj=size(yo,2);
for i=1:ni,
for j=1:nj,
r=sqrt((xn(i)-xo(j))^2+(yn(i)-yo(j))^2);
if Lightn(i)<Lighto(j),
beta0=1; beta=beta0*exp(-gamma*r.^2);
xn(i)=xn(i).*(1-beta)+xo(j).*beta+alpha.*(rand-0.5);
yn(i)=yn(i).*(1-beta)+yo(j).*beta+alpha.*(rand-0.5);
end
end
end
[xn,yn]=findrange(xn,yn,range);
function alpha=newalpha(alpha,delta)
alpha=alpha*delta;
function [xn,yn]=findrange(xn,yn,range)
for i=1:length(yn),
if xn(i)<=range(1), xn(i)=range(1); end
if xn(i)>=range(2), xn(i)=range(2); end
if yn(i)<=range(3), yn(i)=range(3); end
if yn(i)>=range(4), yn(i)=range(4); end
end
